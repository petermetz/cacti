services:
  postgres:
    image: postgres:16.4-alpine3.20
    container_name: postgres

    environment:
      POSTGRES_DB: chainlink_db
      POSTGRES_USER: chainlink_user
      POSTGRES_PASSWORD: 3kcixh_xgm3_yJs_uV9q
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"

    # log_statement possible options: none, ddl, mod, all
    command: ["postgres", "-c", "log_statement=none"]

  chainlink:
    image: smartcontract/chainlink:2.15.0
    container_name: chainlink
    depends_on:
      - postgres
      - besu
    volumes:
      - ./config:/chainlink/config
      - ./secrets:/chainlink/secrets
      - ./chainlink-demo-gui-email-and-password.txt:/chainlink/.api
    ports:
      - "6688:6688"
    command:
      [
        "node",
        "-config=/chainlink/config/config.toml",
        "-secrets=/chainlink/secrets/secrets.toml",
        "start",
        "-a=/chainlink/.api",
      ]

  besu:
    image: hyperledger/besu:24.8.0
    container_name: besu
    environment:
      BESU_NETWORK_ID: 1337
      # https://besu.hyperledger.org/development/public-networks/how-to/monitor/logging#basic-logging
      # Valid log levels are OFF, ERROR, WARN, INFO, DEBUG, TRACE, ALL. The default level is INFO.
      BESU_LOGGING: DEBUG
      BESU_REVERT_REASON_ENABLED: true
      BESU_NETWORK: dev # Equivalent to --network=dev
      BESU_RPC_HTTP_ENABLED: "true" # Equivalent to --rpc-http-enabled
      BESU_RPC_WS_ENABLED: "true" # Equivalent to --rpc-ws-enabled
      BESU_HOST_WHITELIST: "*" # Equivalent to --host-whitelist=*
      BESU_RPC_HTTP_API: "ETH,NET,WEB3,CLIQUE,TRACE" # Equivalent to --rpc-http-api=ETH,NET,WEB3,CLIQUE
      BESU_RPC_WS_API: "ETH,NET,WEB3,CLIQUE,TRACE" # Equivalent to --rpc-ws-api=ETH,NET,WEB3,CLIQUE
      BESU_MINER_ENABLED: "true" # Equivalent to --miner-enabled
      BESU_MINER_COINBASE: "0x0000000000000000000000000000000000000000" # Miner coinbase address
      BESU_MIN_GAS_PRICE: "0" # Equivalent to --min-gas-price=0
    ports:
      - "8545:8545" # HTTP JSON-RPC
      - "8546:8546" # WebSocket JSON-RPC

  proxychain:
    image: hyperledger/besu:24.8.0
    container_name: proxychain
    environment:
      # https://besu.hyperledger.org/development/public-networks/how-to/monitor/logging#basic-logging
      # Valid log levels are OFF, ERROR, WARN, INFO, DEBUG, TRACE, ALL. The default level is INFO.
      BESU_NETWORK_ID: 112568449526115
      BESU_LOGGING: WARN
      BESU_REVERT_REASON_ENABLED: true
      BESU_NETWORK: dev # Equivalent to --network=dev
      BESU_RPC_HTTP_ENABLED: "true" # Equivalent to --rpc-http-enabled
      BESU_RPC_WS_ENABLED: "true" # Equivalent to --rpc-ws-enabled
      BESU_HOST_WHITELIST: "*" # Equivalent to --host-whitelist=*
      BESU_RPC_HTTP_API: "ETH,NET,WEB3,CLIQUE,TRACE" # Equivalent to --rpc-http-api=ETH,NET,WEB3,CLIQUE
      BESU_RPC_WS_API: "ETH,NET,WEB3,CLIQUE,TRACE" # Equivalent to --rpc-ws-api=ETH,NET,WEB3,CLIQUE
      BESU_MINER_ENABLED: "true" # Equivalent to --miner-enabled
      BESU_MINER_COINBASE: "0x0000000000000000000000000000000000000000" # Miner coinbase address
      BESU_MIN_GAS_PRICE: "0" # Equivalent to --min-gas-price=0
    ports:
      - "9545:8545" # HTTP JSON-RPC
      - "9546:8546" # WebSocket JSON-RPC

  # Credentials
  # https://github.com/celo-org/celo-devchain/blob/main/src/utils.ts
  # celo:
  #   build:
  #     context: ../../../../../../tools/docker/celo-all-in-one/
  #     dockerfile: Dockerfile
  #   container_name: celo

  #   ports:
  #     - "7545:8545" # HTTP JSON-RPC
  #     - "7546:8546" # WebSocket JSON-RPC

  cacti:
    container_name: cacti
    image: ghcr.io/hyperledger-cacti/cactus-cmd-api-server:2024-11-15t04-48-04-dev-c4e28fd06
    restart: on-failure
    # build:
    #   context: ../../../../../../packages/cactus-cmd-api-server/
    #   dockerfile: cmd-api-server.Dockerfile

    depends_on:
      - chainlink
      - besu
      - infra-init

    volumes:
      - cactisrc:/usr/src/cacti

    # command: ["ls", "-al", "/usr/src/cacti/packages/cactus-plugin-keychain-memory/"]

    ports:
      - 4000:4000

    environment:
      AUTHORIZATION_PROTOCOL: NONE
      AUTHORIZATION_CONFIG_JSON: "{}"
      API_MTLS_ENABLED: "false"
      API_TLS_ENABLED: "false"
      API_CORS_DOMAIN_CSV: \*
      API_TLS_CERT_PEM: "-"
      API_TLS_CLIENT_CA_PEM: "-"
      API_TLS_KEY_PEM: "-"
      API_HOST: 0.0.0.0
      API_PORT: 4000
      CRPC_HOST: 0.0.0.0
      GRPC_TLS_ENABLED: false
      LOG_LEVEL: DEBUG
      PLUGINS: >-
        [
          {
              "packageName": "@hyperledger/cactus-plugin-keychain-memory",
              "type": "org.hyperledger.cactus.plugin_import_type.LOCAL", 
              "action": "org.hyperledger.cactus.plugin_import_action.INSTALL",
              "options": {
                  "packageSrc": "/usr/src/cacti/packages/cactus-plugin-keychain-memory/",
                  "keychainId": "keychain_id_1",
                  "instanceId": "plugin-keychain-memory-1"
              }
          },
          {
              "packageName": "@hyperledger/cactus-plugin-ledger-connector-besu",
              "type": "org.hyperledger.cactus.plugin_import_type.LOCAL", 
              "action": "org.hyperledger.cactus.plugin_import_action.INSTALL",
              "options": {
                  "packageSrc": "/usr/src/cacti/packages/cactus-plugin-ledger-connector-besu/",
                  "rpcApiHttpHost": "http://besu:8545",
                  "rpcApiWsHost": "ws://besu:8546",
                  "instanceId": "plugin-connector-besu-1"
              }
          },
          {
              "packageName": "@hyperledger/cacti-plugin-ledger-connector-chainlink",
              "type": "org.hyperledger.cactus.plugin_import_type.LOCAL", 
              "action": "org.hyperledger.cactus.plugin_import_action.INSTALL",
              "options": {
                  "packageSrc": "/usr/src/cacti/packages/cacti-plugin-ledger-connector-chainlink/",
                  "instanceId": "plugin-connetocr-chainlink-1",
                  "ledgerHttpHost": "http://chainlink",
                  "ledgerHttpPort": 6688
              }
          }
        ]

  cacti2:
    container_name: cacti2
    image: ghcr.io/hyperledger-cacti/cactus-cmd-api-server:2024-11-15t04-48-04-dev-c4e28fd06
    restart: on-failure
    # build:
    #   context: ../../../../../../packages/cactus-cmd-api-server/
    #   dockerfile: cmd-api-server.Dockerfile

    depends_on:
      - chainlink
      - besu
      - proxychain
      - infra-init

    volumes:
      - cactisrc:/usr/src/cacti

    ports:
      - 5000:4000

    environment:
      AUTHORIZATION_PROTOCOL: NONE
      AUTHORIZATION_CONFIG_JSON: "{}"
      API_MTLS_ENABLED: "false"
      API_TLS_ENABLED: "false"
      API_CORS_DOMAIN_CSV: \*
      API_TLS_CERT_PEM: "-"
      API_TLS_CLIENT_CA_PEM: "-"
      API_TLS_KEY_PEM: "-"
      API_HOST: 0.0.0.0
      API_PORT: 4000
      CRPC_HOST: 0.0.0.0
      GRPC_TLS_ENABLED: false
      LOG_LEVEL: DEBUG
      PLUGINS: >-
        [
          {
              "packageName": "@hyperledger/cactus-plugin-ledger-connector-besu",
              "type": "org.hyperledger.cactus.plugin_import_type.LOCAL", 
              "action": "org.hyperledger.cactus.plugin_import_action.INSTALL",
              "options": {
                  "packageSrc": "/usr/src/cacti/packages/cactus-plugin-ledger-connector-besu/",
                  "rpcApiHttpHost": "http://proxychain:8545",
                  "rpcApiWsHost": "ws://proxychain:8546",
                  "instanceId": "plugin-connector-besu-2"
              }
          }
        ]

  # Race conditions seem to be causing trouble with the API server's initialization without this 10 second wait.
  infra-init:
    container_name: infra-init
    image: node:22.8.0-bookworm-slim
    # command: ["node", "-e", "console.log('hello world')"]
    command: ["sleep", "10"]

volumes: 
  cactisrc: 
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/peter/a/cacti-upstream/