/*
Hyperledger Cacti Plugin - Connector Chainlink

Can perform basic tasks on a Chainlink ledger

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cacti-plugin-ledger-connector-chainlink

import (
	"encoding/json"
)

// checks if the GetSubscriptionInfoV1Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSubscriptionInfoV1Response{}

// GetSubscriptionInfoV1Response struct for GetSubscriptionInfoV1Response
type GetSubscriptionInfoV1Response struct {
	SubscriptionInfo *SubscriptionInfo `json:"subscriptionInfo,omitempty"`
}

// NewGetSubscriptionInfoV1Response instantiates a new GetSubscriptionInfoV1Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSubscriptionInfoV1Response() *GetSubscriptionInfoV1Response {
	this := GetSubscriptionInfoV1Response{}
	return &this
}

// NewGetSubscriptionInfoV1ResponseWithDefaults instantiates a new GetSubscriptionInfoV1Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSubscriptionInfoV1ResponseWithDefaults() *GetSubscriptionInfoV1Response {
	this := GetSubscriptionInfoV1Response{}
	return &this
}

// GetSubscriptionInfo returns the SubscriptionInfo field value if set, zero value otherwise.
func (o *GetSubscriptionInfoV1Response) GetSubscriptionInfo() SubscriptionInfo {
	if o == nil || IsNil(o.SubscriptionInfo) {
		var ret SubscriptionInfo
		return ret
	}
	return *o.SubscriptionInfo
}

// GetSubscriptionInfoOk returns a tuple with the SubscriptionInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSubscriptionInfoV1Response) GetSubscriptionInfoOk() (*SubscriptionInfo, bool) {
	if o == nil || IsNil(o.SubscriptionInfo) {
		return nil, false
	}
	return o.SubscriptionInfo, true
}

// HasSubscriptionInfo returns a boolean if a field has been set.
func (o *GetSubscriptionInfoV1Response) HasSubscriptionInfo() bool {
	if o != nil && !IsNil(o.SubscriptionInfo) {
		return true
	}

	return false
}

// SetSubscriptionInfo gets a reference to the given SubscriptionInfo and assigns it to the SubscriptionInfo field.
func (o *GetSubscriptionInfoV1Response) SetSubscriptionInfo(v SubscriptionInfo) {
	o.SubscriptionInfo = &v
}

func (o GetSubscriptionInfoV1Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSubscriptionInfoV1Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubscriptionInfo) {
		toSerialize["subscriptionInfo"] = o.SubscriptionInfo
	}
	return toSerialize, nil
}

type NullableGetSubscriptionInfoV1Response struct {
	value *GetSubscriptionInfoV1Response
	isSet bool
}

func (v NullableGetSubscriptionInfoV1Response) Get() *GetSubscriptionInfoV1Response {
	return v.value
}

func (v *NullableGetSubscriptionInfoV1Response) Set(val *GetSubscriptionInfoV1Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSubscriptionInfoV1Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSubscriptionInfoV1Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSubscriptionInfoV1Response(val *GetSubscriptionInfoV1Response) *NullableGetSubscriptionInfoV1Response {
	return &NullableGetSubscriptionInfoV1Response{value: val, isSet: true}
}

func (v NullableGetSubscriptionInfoV1Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSubscriptionInfoV1Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


