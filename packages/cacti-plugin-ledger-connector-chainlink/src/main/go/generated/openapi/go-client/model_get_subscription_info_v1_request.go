/*
Hyperledger Cacti Plugin - Connector Chainlink

Can perform basic tasks on a Chainlink ledger

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cacti-plugin-ledger-connector-chainlink

import (
	"encoding/json"
)

// checks if the GetSubscriptionInfoV1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSubscriptionInfoV1Request{}

// GetSubscriptionInfoV1Request struct for GetSubscriptionInfoV1Request
type GetSubscriptionInfoV1Request struct {
	SubscriptionId string `json:"subscriptionId"`
}

// NewGetSubscriptionInfoV1Request instantiates a new GetSubscriptionInfoV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSubscriptionInfoV1Request(subscriptionId string) *GetSubscriptionInfoV1Request {
	this := GetSubscriptionInfoV1Request{}
	this.SubscriptionId = subscriptionId
	return &this
}

// NewGetSubscriptionInfoV1RequestWithDefaults instantiates a new GetSubscriptionInfoV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSubscriptionInfoV1RequestWithDefaults() *GetSubscriptionInfoV1Request {
	this := GetSubscriptionInfoV1Request{}
	return &this
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *GetSubscriptionInfoV1Request) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *GetSubscriptionInfoV1Request) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *GetSubscriptionInfoV1Request) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

func (o GetSubscriptionInfoV1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSubscriptionInfoV1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subscriptionId"] = o.SubscriptionId
	return toSerialize, nil
}

type NullableGetSubscriptionInfoV1Request struct {
	value *GetSubscriptionInfoV1Request
	isSet bool
}

func (v NullableGetSubscriptionInfoV1Request) Get() *GetSubscriptionInfoV1Request {
	return v.value
}

func (v *NullableGetSubscriptionInfoV1Request) Set(val *GetSubscriptionInfoV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSubscriptionInfoV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSubscriptionInfoV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSubscriptionInfoV1Request(val *GetSubscriptionInfoV1Request) *NullableGetSubscriptionInfoV1Request {
	return &NullableGetSubscriptionInfoV1Request{value: val, isSet: true}
}

func (v NullableGetSubscriptionInfoV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSubscriptionInfoV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


