/*
Hyperledger Cacti Plugin - Connector Ethereum

Can perform basic tasks on a Ethereum ledger

API version: 2.0.0-rc.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-ethereum

import (
	"encoding/json"
	"fmt"
)

// GasTransactionConfigKind the model 'GasTransactionConfigKind'
type GasTransactionConfigKind string

// List of GasTransactionConfigKind
const (
	GAS_TRANSACTION_CONFIG_LEGACY GasTransactionConfigKind = "GasTransactionConfigLegacy"
	GAS_TRANSACTION_CONFIG_EIP1559 GasTransactionConfigKind = "GasTransactionConfigEIP1559"
)

// All allowed values of GasTransactionConfigKind enum
var AllowedGasTransactionConfigKindEnumValues = []GasTransactionConfigKind{
	"GasTransactionConfigLegacy",
	"GasTransactionConfigEIP1559",
}

func (v *GasTransactionConfigKind) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GasTransactionConfigKind(value)
	for _, existing := range AllowedGasTransactionConfigKindEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GasTransactionConfigKind", value)
}

// NewGasTransactionConfigKindFromValue returns a pointer to a valid GasTransactionConfigKind
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGasTransactionConfigKindFromValue(v string) (*GasTransactionConfigKind, error) {
	ev := GasTransactionConfigKind(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GasTransactionConfigKind: valid values are %v", v, AllowedGasTransactionConfigKindEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GasTransactionConfigKind) IsValid() bool {
	for _, existing := range AllowedGasTransactionConfigKindEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to GasTransactionConfigKind value
func (v GasTransactionConfigKind) Ptr() *GasTransactionConfigKind {
	return &v
}

type NullableGasTransactionConfigKind struct {
	value *GasTransactionConfigKind
	isSet bool
}

func (v NullableGasTransactionConfigKind) Get() *GasTransactionConfigKind {
	return v.value
}

func (v *NullableGasTransactionConfigKind) Set(val *GasTransactionConfigKind) {
	v.value = val
	v.isSet = true
}

func (v NullableGasTransactionConfigKind) IsSet() bool {
	return v.isSet
}

func (v *NullableGasTransactionConfigKind) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGasTransactionConfigKind(val *GasTransactionConfigKind) *NullableGasTransactionConfigKind {
	return &NullableGasTransactionConfigKind{value: val, isSet: true}
}

func (v NullableGasTransactionConfigKind) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGasTransactionConfigKind) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

