// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file p2p-msg-svc.proto (package cacti.api.p2p.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message cacti.api.p2p.v1.P2pMsgV1
 */
export class P2pMsgV1 extends Message<P2pMsgV1> {
  /**
   * @generated from field: string id = 100;
   */
  id = "";

  /**
   * @generated from field: string msgType = 200;
   */
  msgType = "";

  /**
   * @generated from field: string createdAt = 300;
   */
  createdAt = "";

  /**
   * @generated from field: google.protobuf.Any data = 400;
   */
  data?: Any;

  /**
   * @generated from field: string sender = 500;
   */
  sender = "";

  constructor(data?: PartialMessage<P2pMsgV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.api.p2p.v1.P2pMsgV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 100, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 200, name: "msgType", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 300, name: "createdAt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 400, name: "data", kind: "message", T: Any },
    { no: 500, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): P2pMsgV1 {
    return new P2pMsgV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): P2pMsgV1 {
    return new P2pMsgV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): P2pMsgV1 {
    return new P2pMsgV1().fromJsonString(jsonString, options);
  }

  static equals(a: P2pMsgV1 | PlainMessage<P2pMsgV1> | undefined, b: P2pMsgV1 | PlainMessage<P2pMsgV1> | undefined): boolean {
    return proto3.util.equals(P2pMsgV1, a, b);
  }
}

