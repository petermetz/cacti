"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.org = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: models/evm_transaction_pb.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = __importStar(require("./../google/protobuf/any"));
const pb_1 = __importStar(require("google-protobuf"));
var org;
(function (org) {
    var hyperledger;
    (function (hyperledger) {
        var cacti;
        (function (cacti) {
            var plugin;
            (function (plugin) {
                var ledger;
                (function (ledger) {
                    var connector;
                    (function (connector) {
                        var besu;
                        (function (besu) {
                            class EvmTransactionPB extends pb_1.Message {
                                #one_of_decls = [[335211324], [205598263], [488538260], [3707]];
                                constructor(data) {
                                    super();
                                    pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                                    if (!Array.isArray(data) && typeof data == "object") {
                                        if ("hash" in data && data.hash != undefined) {
                                            this.hash = data.hash;
                                        }
                                        if ("nonce" in data && data.nonce != undefined) {
                                            this.nonce = data.nonce;
                                        }
                                        if ("blockHash" in data && data.blockHash != undefined) {
                                            this.blockHash = data.blockHash;
                                        }
                                        if ("blockNumber" in data && data.blockNumber != undefined) {
                                            this.blockNumber = data.blockNumber;
                                        }
                                        if ("transactionIndex" in data && data.transactionIndex != undefined) {
                                            this.transactionIndex = data.transactionIndex;
                                        }
                                        if ("from" in data && data.from != undefined) {
                                            this.from = data.from;
                                        }
                                        if ("to" in data && data.to != undefined) {
                                            this.to = data.to;
                                        }
                                        if ("value" in data && data.value != undefined) {
                                            this.value = data.value;
                                        }
                                        if ("gasPrice" in data && data.gasPrice != undefined) {
                                            this.gasPrice = data.gasPrice;
                                        }
                                        if ("gas" in data && data.gas != undefined) {
                                            this.gas = data.gas;
                                        }
                                        if ("input" in data && data.input != undefined) {
                                            this.input = data.input;
                                        }
                                    }
                                }
                                get hash() {
                                    return pb_1.Message.getFieldWithDefault(this, 3195150, "");
                                }
                                set hash(value) {
                                    pb_1.Message.setField(this, 3195150, value);
                                }
                                get nonce() {
                                    return pb_1.Message.getFieldWithDefault(this, 105002991, 0);
                                }
                                set nonce(value) {
                                    pb_1.Message.setField(this, 105002991, value);
                                }
                                get blockHash() {
                                    return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Any, 335211324);
                                }
                                set blockHash(value) {
                                    pb_1.Message.setOneofWrapperField(this, 335211324, this.#one_of_decls[0], value);
                                }
                                get has_blockHash() {
                                    return pb_1.Message.getField(this, 335211324) != null;
                                }
                                get blockNumber() {
                                    return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Any, 205598263);
                                }
                                set blockNumber(value) {
                                    pb_1.Message.setOneofWrapperField(this, 205598263, this.#one_of_decls[1], value);
                                }
                                get has_blockNumber() {
                                    return pb_1.Message.getField(this, 205598263) != null;
                                }
                                get transactionIndex() {
                                    return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Any, 488538260);
                                }
                                set transactionIndex(value) {
                                    pb_1.Message.setOneofWrapperField(this, 488538260, this.#one_of_decls[2], value);
                                }
                                get has_transactionIndex() {
                                    return pb_1.Message.getField(this, 488538260) != null;
                                }
                                get from() {
                                    return pb_1.Message.getFieldWithDefault(this, 3151786, "");
                                }
                                set from(value) {
                                    pb_1.Message.setField(this, 3151786, value);
                                }
                                get to() {
                                    return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Any, 3707);
                                }
                                set to(value) {
                                    pb_1.Message.setOneofWrapperField(this, 3707, this.#one_of_decls[3], value);
                                }
                                get has_to() {
                                    return pb_1.Message.getField(this, 3707) != null;
                                }
                                get value() {
                                    return pb_1.Message.getFieldWithDefault(this, 111972721, "");
                                }
                                set value(value) {
                                    pb_1.Message.setField(this, 111972721, value);
                                }
                                get gasPrice() {
                                    return pb_1.Message.getFieldWithDefault(this, 5271059, "");
                                }
                                set gasPrice(value) {
                                    pb_1.Message.setField(this, 5271059, value);
                                }
                                get gas() {
                                    return pb_1.Message.getFieldWithDefault(this, 102105, 0);
                                }
                                set gas(value) {
                                    pb_1.Message.setField(this, 102105, value);
                                }
                                get input() {
                                    return pb_1.Message.getFieldWithDefault(this, 100358090, "");
                                }
                                set input(value) {
                                    pb_1.Message.setField(this, 100358090, value);
                                }
                                get _blockHash() {
                                    const cases = {
                                        0: "none",
                                        335211324: "blockHash"
                                    };
                                    return cases[pb_1.Message.computeOneofCase(this, [335211324])];
                                }
                                get _blockNumber() {
                                    const cases = {
                                        0: "none",
                                        205598263: "blockNumber"
                                    };
                                    return cases[pb_1.Message.computeOneofCase(this, [205598263])];
                                }
                                get _transactionIndex() {
                                    const cases = {
                                        0: "none",
                                        488538260: "transactionIndex"
                                    };
                                    return cases[pb_1.Message.computeOneofCase(this, [488538260])];
                                }
                                get _to() {
                                    const cases = {
                                        0: "none",
                                        3707: "to"
                                    };
                                    return cases[pb_1.Message.computeOneofCase(this, [3707])];
                                }
                                static fromObject(data) {
                                    const message = new EvmTransactionPB({});
                                    if (data.hash != null) {
                                        message.hash = data.hash;
                                    }
                                    if (data.nonce != null) {
                                        message.nonce = data.nonce;
                                    }
                                    if (data.blockHash != null) {
                                        message.blockHash = dependency_1.google.protobuf.Any.fromObject(data.blockHash);
                                    }
                                    if (data.blockNumber != null) {
                                        message.blockNumber = dependency_1.google.protobuf.Any.fromObject(data.blockNumber);
                                    }
                                    if (data.transactionIndex != null) {
                                        message.transactionIndex = dependency_1.google.protobuf.Any.fromObject(data.transactionIndex);
                                    }
                                    if (data.from != null) {
                                        message.from = data.from;
                                    }
                                    if (data.to != null) {
                                        message.to = dependency_1.google.protobuf.Any.fromObject(data.to);
                                    }
                                    if (data.value != null) {
                                        message.value = data.value;
                                    }
                                    if (data.gasPrice != null) {
                                        message.gasPrice = data.gasPrice;
                                    }
                                    if (data.gas != null) {
                                        message.gas = data.gas;
                                    }
                                    if (data.input != null) {
                                        message.input = data.input;
                                    }
                                    return message;
                                }
                                toObject() {
                                    const data = {};
                                    if (this.hash != null) {
                                        data.hash = this.hash;
                                    }
                                    if (this.nonce != null) {
                                        data.nonce = this.nonce;
                                    }
                                    if (this.blockHash != null) {
                                        data.blockHash = this.blockHash.toObject();
                                    }
                                    if (this.blockNumber != null) {
                                        data.blockNumber = this.blockNumber.toObject();
                                    }
                                    if (this.transactionIndex != null) {
                                        data.transactionIndex = this.transactionIndex.toObject();
                                    }
                                    if (this.from != null) {
                                        data.from = this.from;
                                    }
                                    if (this.to != null) {
                                        data.to = this.to.toObject();
                                    }
                                    if (this.value != null) {
                                        data.value = this.value;
                                    }
                                    if (this.gasPrice != null) {
                                        data.gasPrice = this.gasPrice;
                                    }
                                    if (this.gas != null) {
                                        data.gas = this.gas;
                                    }
                                    if (this.input != null) {
                                        data.input = this.input;
                                    }
                                    return data;
                                }
                                serialize(w) {
                                    const writer = w || new pb_1.BinaryWriter();
                                    if (this.hash.length)
                                        writer.writeString(3195150, this.hash);
                                    if (this.nonce != 0)
                                        writer.writeFloat(105002991, this.nonce);
                                    if (this.has_blockHash)
                                        writer.writeMessage(335211324, this.blockHash, () => this.blockHash.serialize(writer));
                                    if (this.has_blockNumber)
                                        writer.writeMessage(205598263, this.blockNumber, () => this.blockNumber.serialize(writer));
                                    if (this.has_transactionIndex)
                                        writer.writeMessage(488538260, this.transactionIndex, () => this.transactionIndex.serialize(writer));
                                    if (this.from.length)
                                        writer.writeString(3151786, this.from);
                                    if (this.has_to)
                                        writer.writeMessage(3707, this.to, () => this.to.serialize(writer));
                                    if (this.value.length)
                                        writer.writeString(111972721, this.value);
                                    if (this.gasPrice.length)
                                        writer.writeString(5271059, this.gasPrice);
                                    if (this.gas != 0)
                                        writer.writeFloat(102105, this.gas);
                                    if (this.input.length)
                                        writer.writeString(100358090, this.input);
                                    if (!w)
                                        return writer.getResultBuffer();
                                }
                                static deserialize(bytes) {
                                    const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EvmTransactionPB();
                                    while (reader.nextField()) {
                                        if (reader.isEndGroup())
                                            break;
                                        switch (reader.getFieldNumber()) {
                                            case 3195150:
                                                message.hash = reader.readString();
                                                break;
                                            case 105002991:
                                                message.nonce = reader.readFloat();
                                                break;
                                            case 335211324:
                                                reader.readMessage(message.blockHash, () => message.blockHash = dependency_1.google.protobuf.Any.deserialize(reader));
                                                break;
                                            case 205598263:
                                                reader.readMessage(message.blockNumber, () => message.blockNumber = dependency_1.google.protobuf.Any.deserialize(reader));
                                                break;
                                            case 488538260:
                                                reader.readMessage(message.transactionIndex, () => message.transactionIndex = dependency_1.google.protobuf.Any.deserialize(reader));
                                                break;
                                            case 3151786:
                                                message.from = reader.readString();
                                                break;
                                            case 3707:
                                                reader.readMessage(message.to, () => message.to = dependency_1.google.protobuf.Any.deserialize(reader));
                                                break;
                                            case 111972721:
                                                message.value = reader.readString();
                                                break;
                                            case 5271059:
                                                message.gasPrice = reader.readString();
                                                break;
                                            case 102105:
                                                message.gas = reader.readFloat();
                                                break;
                                            case 100358090:
                                                message.input = reader.readString();
                                                break;
                                            default: reader.skipField();
                                        }
                                    }
                                    return message;
                                }
                                serializeBinary() {
                                    return this.serialize();
                                }
                                static deserializeBinary(bytes) {
                                    return EvmTransactionPB.deserialize(bytes);
                                }
                            }
                            besu.EvmTransactionPB = EvmTransactionPB;
                        })(besu = connector.besu || (connector.besu = {}));
                    })(connector = ledger.connector || (ledger.connector = {}));
                })(ledger = plugin.ledger || (plugin.ledger = {}));
            })(plugin = cacti.plugin || (cacti.plugin = {}));
        })(cacti = hyperledger.cacti || (hyperledger.cacti = {}));
    })(hyperledger = org.hyperledger || (org.hyperledger = {}));
})(org || (exports.org = org = {}));
//# sourceMappingURL=data:application/json;base64,