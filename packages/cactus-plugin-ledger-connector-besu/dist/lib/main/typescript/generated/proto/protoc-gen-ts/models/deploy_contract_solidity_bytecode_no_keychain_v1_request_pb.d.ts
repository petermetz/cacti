/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: models/deploy_contract_solidity_bytecode_no_keychain_v1_request_pb.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../google/protobuf/any";
import * as dependency_2 from "./besu_private_transaction_config_pb";
import * as dependency_3 from "./web3_signing_credential_pb";
import * as pb_1 from "google-protobuf";
export declare namespace org.hyperledger.cacti.plugin.ledger.connector.besu {
    class DeployContractSolidityBytecodeNoKeychainV1RequestPB extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            contractName?: string;
            contractAbi?: dependency_1.google.protobuf.Any[];
            constructorArgs?: dependency_1.google.protobuf.Any[];
            web3SigningCredential?: dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialPB;
            bytecode?: string;
            gas?: number;
            gasPrice?: string;
            timeoutMs?: number;
            privateTransactionConfig?: dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuPrivateTransactionConfigPB;
        });
        get contractName(): string;
        set contractName(value: string);
        get contractAbi(): dependency_1.google.protobuf.Any[];
        set contractAbi(value: dependency_1.google.protobuf.Any[]);
        get constructorArgs(): dependency_1.google.protobuf.Any[];
        set constructorArgs(value: dependency_1.google.protobuf.Any[]);
        get web3SigningCredential(): dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialPB;
        set web3SigningCredential(value: dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialPB);
        get has_web3SigningCredential(): boolean;
        get bytecode(): string;
        set bytecode(value: string);
        get gas(): number;
        set gas(value: number);
        get gasPrice(): string;
        set gasPrice(value: string);
        get timeoutMs(): number;
        set timeoutMs(value: number);
        get privateTransactionConfig(): dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuPrivateTransactionConfigPB;
        set privateTransactionConfig(value: dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuPrivateTransactionConfigPB);
        get has_privateTransactionConfig(): boolean;
        static fromObject(data: {
            contractName?: string;
            contractAbi?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>[];
            constructorArgs?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>[];
            web3SigningCredential?: ReturnType<typeof dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialPB.prototype.toObject>;
            bytecode?: string;
            gas?: number;
            gasPrice?: string;
            timeoutMs?: number;
            privateTransactionConfig?: ReturnType<typeof dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuPrivateTransactionConfigPB.prototype.toObject>;
        }): DeployContractSolidityBytecodeNoKeychainV1RequestPB;
        toObject(): {
            contractName?: string;
            contractAbi?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>[];
            constructorArgs?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>[];
            web3SigningCredential?: ReturnType<typeof dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialPB.prototype.toObject>;
            bytecode?: string;
            gas?: number;
            gasPrice?: string;
            timeoutMs?: number;
            privateTransactionConfig?: ReturnType<typeof dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuPrivateTransactionConfigPB.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DeployContractSolidityBytecodeNoKeychainV1RequestPB;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): DeployContractSolidityBytecodeNoKeychainV1RequestPB;
    }
}
