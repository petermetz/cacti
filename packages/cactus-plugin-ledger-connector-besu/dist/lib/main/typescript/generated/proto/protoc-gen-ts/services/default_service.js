"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.org = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: services/default_service.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = __importStar(require("./../google/protobuf/empty"));
const dependency_3 = __importStar(require("./../models/deploy_contract_solidity_bytecode_no_keychain_v1_request_pb"));
const dependency_4 = __importStar(require("./../models/deploy_contract_solidity_bytecode_v1_request_pb"));
const dependency_5 = __importStar(require("./../models/deploy_contract_solidity_bytecode_v1_response_pb"));
const dependency_6 = __importStar(require("./../models/get_balance_v1_request_pb"));
const dependency_7 = __importStar(require("./../models/get_balance_v1_response_pb"));
const dependency_8 = __importStar(require("./../models/get_besu_record_v1_request_pb"));
const dependency_9 = __importStar(require("./../models/get_besu_record_v1_response_pb"));
const dependency_10 = __importStar(require("./../models/get_block_v1_request_pb"));
const dependency_11 = __importStar(require("./../models/get_block_v1_response_pb"));
const dependency_12 = __importStar(require("./../models/get_past_logs_v1_request_pb"));
const dependency_13 = __importStar(require("./../models/get_past_logs_v1_response_pb"));
const dependency_14 = __importStar(require("./../models/get_transaction_v1_request_pb"));
const dependency_15 = __importStar(require("./../models/get_transaction_v1_response_pb"));
const dependency_16 = __importStar(require("./../models/invoke_contract_v1_request_pb"));
const dependency_17 = __importStar(require("./../models/invoke_contract_v1_response_pb"));
const dependency_18 = __importStar(require("./../models/run_transaction_request_pb"));
const dependency_19 = __importStar(require("./../models/run_transaction_response_pb"));
const dependency_20 = __importStar(require("./../models/sign_transaction_request_pb"));
const dependency_21 = __importStar(require("./../models/sign_transaction_response_pb"));
const pb_1 = __importStar(require("google-protobuf"));
const grpc_1 = __importStar(require("@grpc/grpc-js"));
var org;
(function (org) {
    var hyperledger;
    (function (hyperledger) {
        var cacti;
        (function (cacti) {
            var plugin;
            (function (plugin) {
                var ledger;
                (function (ledger) {
                    var connector;
                    (function (connector) {
                        var besu;
                        (function (besu) {
                            var services;
                            (function (services) {
                                var defaultservice;
                                (function (defaultservice) {
                                    class DeployContractSolBytecodeNoKeychainV1Request extends pb_1.Message {
                                        #one_of_decls = [];
                                        constructor(data) {
                                            super();
                                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                                            if (!Array.isArray(data) && typeof data == "object") {
                                                if ("deployContractSolidityBytecodeNoKeychainV1RequestPB" in data && data.deployContractSolidityBytecodeNoKeychainV1RequestPB != undefined) {
                                                    this.deployContractSolidityBytecodeNoKeychainV1RequestPB = data.deployContractSolidityBytecodeNoKeychainV1RequestPB;
                                                }
                                            }
                                        }
                                        get deployContractSolidityBytecodeNoKeychainV1RequestPB() {
                                            return pb_1.Message.getWrapperField(this, dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.DeployContractSolidityBytecodeNoKeychainV1RequestPB, 1);
                                        }
                                        set deployContractSolidityBytecodeNoKeychainV1RequestPB(value) {
                                            pb_1.Message.setWrapperField(this, 1, value);
                                        }
                                        get has_deployContractSolidityBytecodeNoKeychainV1RequestPB() {
                                            return pb_1.Message.getField(this, 1) != null;
                                        }
                                        static fromObject(data) {
                                            const message = new DeployContractSolBytecodeNoKeychainV1Request({});
                                            if (data.deployContractSolidityBytecodeNoKeychainV1RequestPB != null) {
                                                message.deployContractSolidityBytecodeNoKeychainV1RequestPB = dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.DeployContractSolidityBytecodeNoKeychainV1RequestPB.fromObject(data.deployContractSolidityBytecodeNoKeychainV1RequestPB);
                                            }
                                            return message;
                                        }
                                        toObject() {
                                            const data = {};
                                            if (this.deployContractSolidityBytecodeNoKeychainV1RequestPB != null) {
                                                data.deployContractSolidityBytecodeNoKeychainV1RequestPB = this.deployContractSolidityBytecodeNoKeychainV1RequestPB.toObject();
                                            }
                                            return data;
                                        }
                                        serialize(w) {
                                            const writer = w || new pb_1.BinaryWriter();
                                            if (this.has_deployContractSolidityBytecodeNoKeychainV1RequestPB)
                                                writer.writeMessage(1, this.deployContractSolidityBytecodeNoKeychainV1RequestPB, () => this.deployContractSolidityBytecodeNoKeychainV1RequestPB.serialize(writer));
                                            if (!w)
                                                return writer.getResultBuffer();
                                        }
                                        static deserialize(bytes) {
                                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DeployContractSolBytecodeNoKeychainV1Request();
                                            while (reader.nextField()) {
                                                if (reader.isEndGroup())
                                                    break;
                                                switch (reader.getFieldNumber()) {
                                                    case 1:
                                                        reader.readMessage(message.deployContractSolidityBytecodeNoKeychainV1RequestPB, () => message.deployContractSolidityBytecodeNoKeychainV1RequestPB = dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.DeployContractSolidityBytecodeNoKeychainV1RequestPB.deserialize(reader));
                                                        break;
                                                    default: reader.skipField();
                                                }
                                            }
                                            return message;
                                        }
                                        serializeBinary() {
                                            return this.serialize();
                                        }
                                        static deserializeBinary(bytes) {
                                            return DeployContractSolBytecodeNoKeychainV1Request.deserialize(bytes);
                                        }
                                    }
                                    defaultservice.DeployContractSolBytecodeNoKeychainV1Request = DeployContractSolBytecodeNoKeychainV1Request;
                                    class DeployContractSolBytecodeV1Request extends pb_1.Message {
                                        #one_of_decls = [];
                                        constructor(data) {
                                            super();
                                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                                            if (!Array.isArray(data) && typeof data == "object") {
                                                if ("deployContractSolidityBytecodeV1RequestPB" in data && data.deployContractSolidityBytecodeV1RequestPB != undefined) {
                                                    this.deployContractSolidityBytecodeV1RequestPB = data.deployContractSolidityBytecodeV1RequestPB;
                                                }
                                            }
                                        }
                                        get deployContractSolidityBytecodeV1RequestPB() {
                                            return pb_1.Message.getWrapperField(this, dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.DeployContractSolidityBytecodeV1RequestPB, 1);
                                        }
                                        set deployContractSolidityBytecodeV1RequestPB(value) {
                                            pb_1.Message.setWrapperField(this, 1, value);
                                        }
                                        get has_deployContractSolidityBytecodeV1RequestPB() {
                                            return pb_1.Message.getField(this, 1) != null;
                                        }
                                        static fromObject(data) {
                                            const message = new DeployContractSolBytecodeV1Request({});
                                            if (data.deployContractSolidityBytecodeV1RequestPB != null) {
                                                message.deployContractSolidityBytecodeV1RequestPB = dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.DeployContractSolidityBytecodeV1RequestPB.fromObject(data.deployContractSolidityBytecodeV1RequestPB);
                                            }
                                            return message;
                                        }
                                        toObject() {
                                            const data = {};
                                            if (this.deployContractSolidityBytecodeV1RequestPB != null) {
                                                data.deployContractSolidityBytecodeV1RequestPB = this.deployContractSolidityBytecodeV1RequestPB.toObject();
                                            }
                                            return data;
                                        }
                                        serialize(w) {
                                            const writer = w || new pb_1.BinaryWriter();
                                            if (this.has_deployContractSolidityBytecodeV1RequestPB)
                                                writer.writeMessage(1, this.deployContractSolidityBytecodeV1RequestPB, () => this.deployContractSolidityBytecodeV1RequestPB.serialize(writer));
                                            if (!w)
                                                return writer.getResultBuffer();
                                        }
                                        static deserialize(bytes) {
                                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DeployContractSolBytecodeV1Request();
                                            while (reader.nextField()) {
                                                if (reader.isEndGroup())
                                                    break;
                                                switch (reader.getFieldNumber()) {
                                                    case 1:
                                                        reader.readMessage(message.deployContractSolidityBytecodeV1RequestPB, () => message.deployContractSolidityBytecodeV1RequestPB = dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.DeployContractSolidityBytecodeV1RequestPB.deserialize(reader));
                                                        break;
                                                    default: reader.skipField();
                                                }
                                            }
                                            return message;
                                        }
                                        serializeBinary() {
                                            return this.serialize();
                                        }
                                        static deserializeBinary(bytes) {
                                            return DeployContractSolBytecodeV1Request.deserialize(bytes);
                                        }
                                    }
                                    defaultservice.DeployContractSolBytecodeV1Request = DeployContractSolBytecodeV1Request;
                                    class GetBalanceV1Request extends pb_1.Message {
                                        #one_of_decls = [];
                                        constructor(data) {
                                            super();
                                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                                            if (!Array.isArray(data) && typeof data == "object") {
                                                if ("getBalanceV1RequestPB" in data && data.getBalanceV1RequestPB != undefined) {
                                                    this.getBalanceV1RequestPB = data.getBalanceV1RequestPB;
                                                }
                                            }
                                        }
                                        get getBalanceV1RequestPB() {
                                            return pb_1.Message.getWrapperField(this, dependency_6.org.hyperledger.cacti.plugin.ledger.connector.besu.GetBalanceV1RequestPB, 1);
                                        }
                                        set getBalanceV1RequestPB(value) {
                                            pb_1.Message.setWrapperField(this, 1, value);
                                        }
                                        get has_getBalanceV1RequestPB() {
                                            return pb_1.Message.getField(this, 1) != null;
                                        }
                                        static fromObject(data) {
                                            const message = new GetBalanceV1Request({});
                                            if (data.getBalanceV1RequestPB != null) {
                                                message.getBalanceV1RequestPB = dependency_6.org.hyperledger.cacti.plugin.ledger.connector.besu.GetBalanceV1RequestPB.fromObject(data.getBalanceV1RequestPB);
                                            }
                                            return message;
                                        }
                                        toObject() {
                                            const data = {};
                                            if (this.getBalanceV1RequestPB != null) {
                                                data.getBalanceV1RequestPB = this.getBalanceV1RequestPB.toObject();
                                            }
                                            return data;
                                        }
                                        serialize(w) {
                                            const writer = w || new pb_1.BinaryWriter();
                                            if (this.has_getBalanceV1RequestPB)
                                                writer.writeMessage(1, this.getBalanceV1RequestPB, () => this.getBalanceV1RequestPB.serialize(writer));
                                            if (!w)
                                                return writer.getResultBuffer();
                                        }
                                        static deserialize(bytes) {
                                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetBalanceV1Request();
                                            while (reader.nextField()) {
                                                if (reader.isEndGroup())
                                                    break;
                                                switch (reader.getFieldNumber()) {
                                                    case 1:
                                                        reader.readMessage(message.getBalanceV1RequestPB, () => message.getBalanceV1RequestPB = dependency_6.org.hyperledger.cacti.plugin.ledger.connector.besu.GetBalanceV1RequestPB.deserialize(reader));
                                                        break;
                                                    default: reader.skipField();
                                                }
                                            }
                                            return message;
                                        }
                                        serializeBinary() {
                                            return this.serialize();
                                        }
                                        static deserializeBinary(bytes) {
                                            return GetBalanceV1Request.deserialize(bytes);
                                        }
                                    }
                                    defaultservice.GetBalanceV1Request = GetBalanceV1Request;
                                    class GetBesuRecordV1Request extends pb_1.Message {
                                        #one_of_decls = [];
                                        constructor(data) {
                                            super();
                                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                                            if (!Array.isArray(data) && typeof data == "object") {
                                                if ("getBesuRecordV1RequestPB" in data && data.getBesuRecordV1RequestPB != undefined) {
                                                    this.getBesuRecordV1RequestPB = data.getBesuRecordV1RequestPB;
                                                }
                                            }
                                        }
                                        get getBesuRecordV1RequestPB() {
                                            return pb_1.Message.getWrapperField(this, dependency_8.org.hyperledger.cacti.plugin.ledger.connector.besu.GetBesuRecordV1RequestPB, 1);
                                        }
                                        set getBesuRecordV1RequestPB(value) {
                                            pb_1.Message.setWrapperField(this, 1, value);
                                        }
                                        get has_getBesuRecordV1RequestPB() {
                                            return pb_1.Message.getField(this, 1) != null;
                                        }
                                        static fromObject(data) {
                                            const message = new GetBesuRecordV1Request({});
                                            if (data.getBesuRecordV1RequestPB != null) {
                                                message.getBesuRecordV1RequestPB = dependency_8.org.hyperledger.cacti.plugin.ledger.connector.besu.GetBesuRecordV1RequestPB.fromObject(data.getBesuRecordV1RequestPB);
                                            }
                                            return message;
                                        }
                                        toObject() {
                                            const data = {};
                                            if (this.getBesuRecordV1RequestPB != null) {
                                                data.getBesuRecordV1RequestPB = this.getBesuRecordV1RequestPB.toObject();
                                            }
                                            return data;
                                        }
                                        serialize(w) {
                                            const writer = w || new pb_1.BinaryWriter();
                                            if (this.has_getBesuRecordV1RequestPB)
                                                writer.writeMessage(1, this.getBesuRecordV1RequestPB, () => this.getBesuRecordV1RequestPB.serialize(writer));
                                            if (!w)
                                                return writer.getResultBuffer();
                                        }
                                        static deserialize(bytes) {
                                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetBesuRecordV1Request();
                                            while (reader.nextField()) {
                                                if (reader.isEndGroup())
                                                    break;
                                                switch (reader.getFieldNumber()) {
                                                    case 1:
                                                        reader.readMessage(message.getBesuRecordV1RequestPB, () => message.getBesuRecordV1RequestPB = dependency_8.org.hyperledger.cacti.plugin.ledger.connector.besu.GetBesuRecordV1RequestPB.deserialize(reader));
                                                        break;
                                                    default: reader.skipField();
                                                }
                                            }
                                            return message;
                                        }
                                        serializeBinary() {
                                            return this.serialize();
                                        }
                                        static deserializeBinary(bytes) {
                                            return GetBesuRecordV1Request.deserialize(bytes);
                                        }
                                    }
                                    defaultservice.GetBesuRecordV1Request = GetBesuRecordV1Request;
                                    class GetBlockV1Request extends pb_1.Message {
                                        #one_of_decls = [];
                                        constructor(data) {
                                            super();
                                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                                            if (!Array.isArray(data) && typeof data == "object") {
                                                if ("getBlockV1RequestPB" in data && data.getBlockV1RequestPB != undefined) {
                                                    this.getBlockV1RequestPB = data.getBlockV1RequestPB;
                                                }
                                            }
                                        }
                                        get getBlockV1RequestPB() {
                                            return pb_1.Message.getWrapperField(this, dependency_10.org.hyperledger.cacti.plugin.ledger.connector.besu.GetBlockV1RequestPB, 1);
                                        }
                                        set getBlockV1RequestPB(value) {
                                            pb_1.Message.setWrapperField(this, 1, value);
                                        }
                                        get has_getBlockV1RequestPB() {
                                            return pb_1.Message.getField(this, 1) != null;
                                        }
                                        static fromObject(data) {
                                            const message = new GetBlockV1Request({});
                                            if (data.getBlockV1RequestPB != null) {
                                                message.getBlockV1RequestPB = dependency_10.org.hyperledger.cacti.plugin.ledger.connector.besu.GetBlockV1RequestPB.fromObject(data.getBlockV1RequestPB);
                                            }
                                            return message;
                                        }
                                        toObject() {
                                            const data = {};
                                            if (this.getBlockV1RequestPB != null) {
                                                data.getBlockV1RequestPB = this.getBlockV1RequestPB.toObject();
                                            }
                                            return data;
                                        }
                                        serialize(w) {
                                            const writer = w || new pb_1.BinaryWriter();
                                            if (this.has_getBlockV1RequestPB)
                                                writer.writeMessage(1, this.getBlockV1RequestPB, () => this.getBlockV1RequestPB.serialize(writer));
                                            if (!w)
                                                return writer.getResultBuffer();
                                        }
                                        static deserialize(bytes) {
                                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetBlockV1Request();
                                            while (reader.nextField()) {
                                                if (reader.isEndGroup())
                                                    break;
                                                switch (reader.getFieldNumber()) {
                                                    case 1:
                                                        reader.readMessage(message.getBlockV1RequestPB, () => message.getBlockV1RequestPB = dependency_10.org.hyperledger.cacti.plugin.ledger.connector.besu.GetBlockV1RequestPB.deserialize(reader));
                                                        break;
                                                    default: reader.skipField();
                                                }
                                            }
                                            return message;
                                        }
                                        serializeBinary() {
                                            return this.serialize();
                                        }
                                        static deserializeBinary(bytes) {
                                            return GetBlockV1Request.deserialize(bytes);
                                        }
                                    }
                                    defaultservice.GetBlockV1Request = GetBlockV1Request;
                                    class GetOpenApiSpecV1Response extends pb_1.Message {
                                        #one_of_decls = [];
                                        constructor(data) {
                                            super();
                                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                                            if (!Array.isArray(data) && typeof data == "object") {
                                                if ("data" in data && data.data != undefined) {
                                                    this.data = data.data;
                                                }
                                            }
                                        }
                                        get data() {
                                            return pb_1.Message.getFieldWithDefault(this, 1, "");
                                        }
                                        set data(value) {
                                            pb_1.Message.setField(this, 1, value);
                                        }
                                        static fromObject(data) {
                                            const message = new GetOpenApiSpecV1Response({});
                                            if (data.data != null) {
                                                message.data = data.data;
                                            }
                                            return message;
                                        }
                                        toObject() {
                                            const data = {};
                                            if (this.data != null) {
                                                data.data = this.data;
                                            }
                                            return data;
                                        }
                                        serialize(w) {
                                            const writer = w || new pb_1.BinaryWriter();
                                            if (this.data.length)
                                                writer.writeString(1, this.data);
                                            if (!w)
                                                return writer.getResultBuffer();
                                        }
                                        static deserialize(bytes) {
                                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetOpenApiSpecV1Response();
                                            while (reader.nextField()) {
                                                if (reader.isEndGroup())
                                                    break;
                                                switch (reader.getFieldNumber()) {
                                                    case 1:
                                                        message.data = reader.readString();
                                                        break;
                                                    default: reader.skipField();
                                                }
                                            }
                                            return message;
                                        }
                                        serializeBinary() {
                                            return this.serialize();
                                        }
                                        static deserializeBinary(bytes) {
                                            return GetOpenApiSpecV1Response.deserialize(bytes);
                                        }
                                    }
                                    defaultservice.GetOpenApiSpecV1Response = GetOpenApiSpecV1Response;
                                    class GetPastLogsV1Request extends pb_1.Message {
                                        #one_of_decls = [];
                                        constructor(data) {
                                            super();
                                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                                            if (!Array.isArray(data) && typeof data == "object") {
                                                if ("getPastLogsV1RequestPB" in data && data.getPastLogsV1RequestPB != undefined) {
                                                    this.getPastLogsV1RequestPB = data.getPastLogsV1RequestPB;
                                                }
                                            }
                                        }
                                        get getPastLogsV1RequestPB() {
                                            return pb_1.Message.getWrapperField(this, dependency_12.org.hyperledger.cacti.plugin.ledger.connector.besu.GetPastLogsV1RequestPB, 1);
                                        }
                                        set getPastLogsV1RequestPB(value) {
                                            pb_1.Message.setWrapperField(this, 1, value);
                                        }
                                        get has_getPastLogsV1RequestPB() {
                                            return pb_1.Message.getField(this, 1) != null;
                                        }
                                        static fromObject(data) {
                                            const message = new GetPastLogsV1Request({});
                                            if (data.getPastLogsV1RequestPB != null) {
                                                message.getPastLogsV1RequestPB = dependency_12.org.hyperledger.cacti.plugin.ledger.connector.besu.GetPastLogsV1RequestPB.fromObject(data.getPastLogsV1RequestPB);
                                            }
                                            return message;
                                        }
                                        toObject() {
                                            const data = {};
                                            if (this.getPastLogsV1RequestPB != null) {
                                                data.getPastLogsV1RequestPB = this.getPastLogsV1RequestPB.toObject();
                                            }
                                            return data;
                                        }
                                        serialize(w) {
                                            const writer = w || new pb_1.BinaryWriter();
                                            if (this.has_getPastLogsV1RequestPB)
                                                writer.writeMessage(1, this.getPastLogsV1RequestPB, () => this.getPastLogsV1RequestPB.serialize(writer));
                                            if (!w)
                                                return writer.getResultBuffer();
                                        }
                                        static deserialize(bytes) {
                                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetPastLogsV1Request();
                                            while (reader.nextField()) {
                                                if (reader.isEndGroup())
                                                    break;
                                                switch (reader.getFieldNumber()) {
                                                    case 1:
                                                        reader.readMessage(message.getPastLogsV1RequestPB, () => message.getPastLogsV1RequestPB = dependency_12.org.hyperledger.cacti.plugin.ledger.connector.besu.GetPastLogsV1RequestPB.deserialize(reader));
                                                        break;
                                                    default: reader.skipField();
                                                }
                                            }
                                            return message;
                                        }
                                        serializeBinary() {
                                            return this.serialize();
                                        }
                                        static deserializeBinary(bytes) {
                                            return GetPastLogsV1Request.deserialize(bytes);
                                        }
                                    }
                                    defaultservice.GetPastLogsV1Request = GetPastLogsV1Request;
                                    class GetPrometheusMetricsV1Response extends pb_1.Message {
                                        #one_of_decls = [];
                                        constructor(data) {
                                            super();
                                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                                            if (!Array.isArray(data) && typeof data == "object") {
                                                if ("data" in data && data.data != undefined) {
                                                    this.data = data.data;
                                                }
                                            }
                                        }
                                        get data() {
                                            return pb_1.Message.getFieldWithDefault(this, 1, "");
                                        }
                                        set data(value) {
                                            pb_1.Message.setField(this, 1, value);
                                        }
                                        static fromObject(data) {
                                            const message = new GetPrometheusMetricsV1Response({});
                                            if (data.data != null) {
                                                message.data = data.data;
                                            }
                                            return message;
                                        }
                                        toObject() {
                                            const data = {};
                                            if (this.data != null) {
                                                data.data = this.data;
                                            }
                                            return data;
                                        }
                                        serialize(w) {
                                            const writer = w || new pb_1.BinaryWriter();
                                            if (this.data.length)
                                                writer.writeString(1, this.data);
                                            if (!w)
                                                return writer.getResultBuffer();
                                        }
                                        static deserialize(bytes) {
                                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetPrometheusMetricsV1Response();
                                            while (reader.nextField()) {
                                                if (reader.isEndGroup())
                                                    break;
                                                switch (reader.getFieldNumber()) {
                                                    case 1:
                                                        message.data = reader.readString();
                                                        break;
                                                    default: reader.skipField();
                                                }
                                            }
                                            return message;
                                        }
                                        serializeBinary() {
                                            return this.serialize();
                                        }
                                        static deserializeBinary(bytes) {
                                            return GetPrometheusMetricsV1Response.deserialize(bytes);
                                        }
                                    }
                                    defaultservice.GetPrometheusMetricsV1Response = GetPrometheusMetricsV1Response;
                                    class GetTransactionV1Request extends pb_1.Message {
                                        #one_of_decls = [];
                                        constructor(data) {
                                            super();
                                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                                            if (!Array.isArray(data) && typeof data == "object") {
                                                if ("getTransactionV1RequestPB" in data && data.getTransactionV1RequestPB != undefined) {
                                                    this.getTransactionV1RequestPB = data.getTransactionV1RequestPB;
                                                }
                                            }
                                        }
                                        get getTransactionV1RequestPB() {
                                            return pb_1.Message.getWrapperField(this, dependency_14.org.hyperledger.cacti.plugin.ledger.connector.besu.GetTransactionV1RequestPB, 1);
                                        }
                                        set getTransactionV1RequestPB(value) {
                                            pb_1.Message.setWrapperField(this, 1, value);
                                        }
                                        get has_getTransactionV1RequestPB() {
                                            return pb_1.Message.getField(this, 1) != null;
                                        }
                                        static fromObject(data) {
                                            const message = new GetTransactionV1Request({});
                                            if (data.getTransactionV1RequestPB != null) {
                                                message.getTransactionV1RequestPB = dependency_14.org.hyperledger.cacti.plugin.ledger.connector.besu.GetTransactionV1RequestPB.fromObject(data.getTransactionV1RequestPB);
                                            }
                                            return message;
                                        }
                                        toObject() {
                                            const data = {};
                                            if (this.getTransactionV1RequestPB != null) {
                                                data.getTransactionV1RequestPB = this.getTransactionV1RequestPB.toObject();
                                            }
                                            return data;
                                        }
                                        serialize(w) {
                                            const writer = w || new pb_1.BinaryWriter();
                                            if (this.has_getTransactionV1RequestPB)
                                                writer.writeMessage(1, this.getTransactionV1RequestPB, () => this.getTransactionV1RequestPB.serialize(writer));
                                            if (!w)
                                                return writer.getResultBuffer();
                                        }
                                        static deserialize(bytes) {
                                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetTransactionV1Request();
                                            while (reader.nextField()) {
                                                if (reader.isEndGroup())
                                                    break;
                                                switch (reader.getFieldNumber()) {
                                                    case 1:
                                                        reader.readMessage(message.getTransactionV1RequestPB, () => message.getTransactionV1RequestPB = dependency_14.org.hyperledger.cacti.plugin.ledger.connector.besu.GetTransactionV1RequestPB.deserialize(reader));
                                                        break;
                                                    default: reader.skipField();
                                                }
                                            }
                                            return message;
                                        }
                                        serializeBinary() {
                                            return this.serialize();
                                        }
                                        static deserializeBinary(bytes) {
                                            return GetTransactionV1Request.deserialize(bytes);
                                        }
                                    }
                                    defaultservice.GetTransactionV1Request = GetTransactionV1Request;
                                    class InvokeContractV1Request extends pb_1.Message {
                                        #one_of_decls = [];
                                        constructor(data) {
                                            super();
                                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                                            if (!Array.isArray(data) && typeof data == "object") {
                                                if ("invokeContractV1RequestPB" in data && data.invokeContractV1RequestPB != undefined) {
                                                    this.invokeContractV1RequestPB = data.invokeContractV1RequestPB;
                                                }
                                            }
                                        }
                                        get invokeContractV1RequestPB() {
                                            return pb_1.Message.getWrapperField(this, dependency_16.org.hyperledger.cacti.plugin.ledger.connector.besu.InvokeContractV1RequestPB, 1);
                                        }
                                        set invokeContractV1RequestPB(value) {
                                            pb_1.Message.setWrapperField(this, 1, value);
                                        }
                                        get has_invokeContractV1RequestPB() {
                                            return pb_1.Message.getField(this, 1) != null;
                                        }
                                        static fromObject(data) {
                                            const message = new InvokeContractV1Request({});
                                            if (data.invokeContractV1RequestPB != null) {
                                                message.invokeContractV1RequestPB = dependency_16.org.hyperledger.cacti.plugin.ledger.connector.besu.InvokeContractV1RequestPB.fromObject(data.invokeContractV1RequestPB);
                                            }
                                            return message;
                                        }
                                        toObject() {
                                            const data = {};
                                            if (this.invokeContractV1RequestPB != null) {
                                                data.invokeContractV1RequestPB = this.invokeContractV1RequestPB.toObject();
                                            }
                                            return data;
                                        }
                                        serialize(w) {
                                            const writer = w || new pb_1.BinaryWriter();
                                            if (this.has_invokeContractV1RequestPB)
                                                writer.writeMessage(1, this.invokeContractV1RequestPB, () => this.invokeContractV1RequestPB.serialize(writer));
                                            if (!w)
                                                return writer.getResultBuffer();
                                        }
                                        static deserialize(bytes) {
                                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new InvokeContractV1Request();
                                            while (reader.nextField()) {
                                                if (reader.isEndGroup())
                                                    break;
                                                switch (reader.getFieldNumber()) {
                                                    case 1:
                                                        reader.readMessage(message.invokeContractV1RequestPB, () => message.invokeContractV1RequestPB = dependency_16.org.hyperledger.cacti.plugin.ledger.connector.besu.InvokeContractV1RequestPB.deserialize(reader));
                                                        break;
                                                    default: reader.skipField();
                                                }
                                            }
                                            return message;
                                        }
                                        serializeBinary() {
                                            return this.serialize();
                                        }
                                        static deserializeBinary(bytes) {
                                            return InvokeContractV1Request.deserialize(bytes);
                                        }
                                    }
                                    defaultservice.InvokeContractV1Request = InvokeContractV1Request;
                                    class RunTransactionV1Request extends pb_1.Message {
                                        #one_of_decls = [];
                                        constructor(data) {
                                            super();
                                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                                            if (!Array.isArray(data) && typeof data == "object") {
                                                if ("runTransactionRequestPB" in data && data.runTransactionRequestPB != undefined) {
                                                    this.runTransactionRequestPB = data.runTransactionRequestPB;
                                                }
                                            }
                                        }
                                        get runTransactionRequestPB() {
                                            return pb_1.Message.getWrapperField(this, dependency_18.org.hyperledger.cacti.plugin.ledger.connector.besu.RunTransactionRequestPB, 1);
                                        }
                                        set runTransactionRequestPB(value) {
                                            pb_1.Message.setWrapperField(this, 1, value);
                                        }
                                        get has_runTransactionRequestPB() {
                                            return pb_1.Message.getField(this, 1) != null;
                                        }
                                        static fromObject(data) {
                                            const message = new RunTransactionV1Request({});
                                            if (data.runTransactionRequestPB != null) {
                                                message.runTransactionRequestPB = dependency_18.org.hyperledger.cacti.plugin.ledger.connector.besu.RunTransactionRequestPB.fromObject(data.runTransactionRequestPB);
                                            }
                                            return message;
                                        }
                                        toObject() {
                                            const data = {};
                                            if (this.runTransactionRequestPB != null) {
                                                data.runTransactionRequestPB = this.runTransactionRequestPB.toObject();
                                            }
                                            return data;
                                        }
                                        serialize(w) {
                                            const writer = w || new pb_1.BinaryWriter();
                                            if (this.has_runTransactionRequestPB)
                                                writer.writeMessage(1, this.runTransactionRequestPB, () => this.runTransactionRequestPB.serialize(writer));
                                            if (!w)
                                                return writer.getResultBuffer();
                                        }
                                        static deserialize(bytes) {
                                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new RunTransactionV1Request();
                                            while (reader.nextField()) {
                                                if (reader.isEndGroup())
                                                    break;
                                                switch (reader.getFieldNumber()) {
                                                    case 1:
                                                        reader.readMessage(message.runTransactionRequestPB, () => message.runTransactionRequestPB = dependency_18.org.hyperledger.cacti.plugin.ledger.connector.besu.RunTransactionRequestPB.deserialize(reader));
                                                        break;
                                                    default: reader.skipField();
                                                }
                                            }
                                            return message;
                                        }
                                        serializeBinary() {
                                            return this.serialize();
                                        }
                                        static deserializeBinary(bytes) {
                                            return RunTransactionV1Request.deserialize(bytes);
                                        }
                                    }
                                    defaultservice.RunTransactionV1Request = RunTransactionV1Request;
                                    class SignTransactionV1Request extends pb_1.Message {
                                        #one_of_decls = [];
                                        constructor(data) {
                                            super();
                                            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                                            if (!Array.isArray(data) && typeof data == "object") {
                                                if ("signTransactionRequestPB" in data && data.signTransactionRequestPB != undefined) {
                                                    this.signTransactionRequestPB = data.signTransactionRequestPB;
                                                }
                                            }
                                        }
                                        get signTransactionRequestPB() {
                                            return pb_1.Message.getWrapperField(this, dependency_20.org.hyperledger.cacti.plugin.ledger.connector.besu.SignTransactionRequestPB, 1);
                                        }
                                        set signTransactionRequestPB(value) {
                                            pb_1.Message.setWrapperField(this, 1, value);
                                        }
                                        get has_signTransactionRequestPB() {
                                            return pb_1.Message.getField(this, 1) != null;
                                        }
                                        static fromObject(data) {
                                            const message = new SignTransactionV1Request({});
                                            if (data.signTransactionRequestPB != null) {
                                                message.signTransactionRequestPB = dependency_20.org.hyperledger.cacti.plugin.ledger.connector.besu.SignTransactionRequestPB.fromObject(data.signTransactionRequestPB);
                                            }
                                            return message;
                                        }
                                        toObject() {
                                            const data = {};
                                            if (this.signTransactionRequestPB != null) {
                                                data.signTransactionRequestPB = this.signTransactionRequestPB.toObject();
                                            }
                                            return data;
                                        }
                                        serialize(w) {
                                            const writer = w || new pb_1.BinaryWriter();
                                            if (this.has_signTransactionRequestPB)
                                                writer.writeMessage(1, this.signTransactionRequestPB, () => this.signTransactionRequestPB.serialize(writer));
                                            if (!w)
                                                return writer.getResultBuffer();
                                        }
                                        static deserialize(bytes) {
                                            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SignTransactionV1Request();
                                            while (reader.nextField()) {
                                                if (reader.isEndGroup())
                                                    break;
                                                switch (reader.getFieldNumber()) {
                                                    case 1:
                                                        reader.readMessage(message.signTransactionRequestPB, () => message.signTransactionRequestPB = dependency_20.org.hyperledger.cacti.plugin.ledger.connector.besu.SignTransactionRequestPB.deserialize(reader));
                                                        break;
                                                    default: reader.skipField();
                                                }
                                            }
                                            return message;
                                        }
                                        serializeBinary() {
                                            return this.serialize();
                                        }
                                        static deserializeBinary(bytes) {
                                            return SignTransactionV1Request.deserialize(bytes);
                                        }
                                    }
                                    defaultservice.SignTransactionV1Request = SignTransactionV1Request;
                                    class UnimplementedDefaultServiceService {
                                        static definition = {
                                            DeployContractSolBytecodeNoKeychainV1: {
                                                path: "/org.hyperledger.cacti.plugin.ledger.connector.besu.services.defaultservice.DefaultService/DeployContractSolBytecodeNoKeychainV1",
                                                requestStream: false,
                                                responseStream: false,
                                                requestSerialize: (message) => Buffer.from(message.serialize()),
                                                requestDeserialize: (bytes) => DeployContractSolBytecodeNoKeychainV1Request.deserialize(new Uint8Array(bytes)),
                                                responseSerialize: (message) => Buffer.from(message.serialize()),
                                                responseDeserialize: (bytes) => dependency_5.org.hyperledger.cacti.plugin.ledger.connector.besu.DeployContractSolidityBytecodeV1ResponsePB.deserialize(new Uint8Array(bytes))
                                            },
                                            DeployContractSolBytecodeV1: {
                                                path: "/org.hyperledger.cacti.plugin.ledger.connector.besu.services.defaultservice.DefaultService/DeployContractSolBytecodeV1",
                                                requestStream: false,
                                                responseStream: false,
                                                requestSerialize: (message) => Buffer.from(message.serialize()),
                                                requestDeserialize: (bytes) => DeployContractSolBytecodeV1Request.deserialize(new Uint8Array(bytes)),
                                                responseSerialize: (message) => Buffer.from(message.serialize()),
                                                responseDeserialize: (bytes) => dependency_5.org.hyperledger.cacti.plugin.ledger.connector.besu.DeployContractSolidityBytecodeV1ResponsePB.deserialize(new Uint8Array(bytes))
                                            },
                                            GetBalanceV1: {
                                                path: "/org.hyperledger.cacti.plugin.ledger.connector.besu.services.defaultservice.DefaultService/GetBalanceV1",
                                                requestStream: false,
                                                responseStream: false,
                                                requestSerialize: (message) => Buffer.from(message.serialize()),
                                                requestDeserialize: (bytes) => GetBalanceV1Request.deserialize(new Uint8Array(bytes)),
                                                responseSerialize: (message) => Buffer.from(message.serialize()),
                                                responseDeserialize: (bytes) => dependency_7.org.hyperledger.cacti.plugin.ledger.connector.besu.GetBalanceV1ResponsePB.deserialize(new Uint8Array(bytes))
                                            },
                                            GetBesuRecordV1: {
                                                path: "/org.hyperledger.cacti.plugin.ledger.connector.besu.services.defaultservice.DefaultService/GetBesuRecordV1",
                                                requestStream: false,
                                                responseStream: false,
                                                requestSerialize: (message) => Buffer.from(message.serialize()),
                                                requestDeserialize: (bytes) => GetBesuRecordV1Request.deserialize(new Uint8Array(bytes)),
                                                responseSerialize: (message) => Buffer.from(message.serialize()),
                                                responseDeserialize: (bytes) => dependency_9.org.hyperledger.cacti.plugin.ledger.connector.besu.GetBesuRecordV1ResponsePB.deserialize(new Uint8Array(bytes))
                                            },
                                            GetBlockV1: {
                                                path: "/org.hyperledger.cacti.plugin.ledger.connector.besu.services.defaultservice.DefaultService/GetBlockV1",
                                                requestStream: false,
                                                responseStream: false,
                                                requestSerialize: (message) => Buffer.from(message.serialize()),
                                                requestDeserialize: (bytes) => GetBlockV1Request.deserialize(new Uint8Array(bytes)),
                                                responseSerialize: (message) => Buffer.from(message.serialize()),
                                                responseDeserialize: (bytes) => dependency_11.org.hyperledger.cacti.plugin.ledger.connector.besu.GetBlockV1ResponsePB.deserialize(new Uint8Array(bytes))
                                            },
                                            GetOpenApiSpecV1: {
                                                path: "/org.hyperledger.cacti.plugin.ledger.connector.besu.services.defaultservice.DefaultService/GetOpenApiSpecV1",
                                                requestStream: false,
                                                responseStream: false,
                                                requestSerialize: (message) => Buffer.from(message.serialize()),
                                                requestDeserialize: (bytes) => dependency_1.google.protobuf.Empty.deserialize(new Uint8Array(bytes)),
                                                responseSerialize: (message) => Buffer.from(message.serialize()),
                                                responseDeserialize: (bytes) => GetOpenApiSpecV1Response.deserialize(new Uint8Array(bytes))
                                            },
                                            GetPastLogsV1: {
                                                path: "/org.hyperledger.cacti.plugin.ledger.connector.besu.services.defaultservice.DefaultService/GetPastLogsV1",
                                                requestStream: false,
                                                responseStream: false,
                                                requestSerialize: (message) => Buffer.from(message.serialize()),
                                                requestDeserialize: (bytes) => GetPastLogsV1Request.deserialize(new Uint8Array(bytes)),
                                                responseSerialize: (message) => Buffer.from(message.serialize()),
                                                responseDeserialize: (bytes) => dependency_13.org.hyperledger.cacti.plugin.ledger.connector.besu.GetPastLogsV1ResponsePB.deserialize(new Uint8Array(bytes))
                                            },
                                            GetPrometheusMetricsV1: {
                                                path: "/org.hyperledger.cacti.plugin.ledger.connector.besu.services.defaultservice.DefaultService/GetPrometheusMetricsV1",
                                                requestStream: false,
                                                responseStream: false,
                                                requestSerialize: (message) => Buffer.from(message.serialize()),
                                                requestDeserialize: (bytes) => dependency_1.google.protobuf.Empty.deserialize(new Uint8Array(bytes)),
                                                responseSerialize: (message) => Buffer.from(message.serialize()),
                                                responseDeserialize: (bytes) => GetPrometheusMetricsV1Response.deserialize(new Uint8Array(bytes))
                                            },
                                            GetTransactionV1: {
                                                path: "/org.hyperledger.cacti.plugin.ledger.connector.besu.services.defaultservice.DefaultService/GetTransactionV1",
                                                requestStream: false,
                                                responseStream: false,
                                                requestSerialize: (message) => Buffer.from(message.serialize()),
                                                requestDeserialize: (bytes) => GetTransactionV1Request.deserialize(new Uint8Array(bytes)),
                                                responseSerialize: (message) => Buffer.from(message.serialize()),
                                                responseDeserialize: (bytes) => dependency_15.org.hyperledger.cacti.plugin.ledger.connector.besu.GetTransactionV1ResponsePB.deserialize(new Uint8Array(bytes))
                                            },
                                            InvokeContractV1: {
                                                path: "/org.hyperledger.cacti.plugin.ledger.connector.besu.services.defaultservice.DefaultService/InvokeContractV1",
                                                requestStream: false,
                                                responseStream: false,
                                                requestSerialize: (message) => Buffer.from(message.serialize()),
                                                requestDeserialize: (bytes) => InvokeContractV1Request.deserialize(new Uint8Array(bytes)),
                                                responseSerialize: (message) => Buffer.from(message.serialize()),
                                                responseDeserialize: (bytes) => dependency_17.org.hyperledger.cacti.plugin.ledger.connector.besu.InvokeContractV1ResponsePB.deserialize(new Uint8Array(bytes))
                                            },
                                            RunTransactionV1: {
                                                path: "/org.hyperledger.cacti.plugin.ledger.connector.besu.services.defaultservice.DefaultService/RunTransactionV1",
                                                requestStream: false,
                                                responseStream: false,
                                                requestSerialize: (message) => Buffer.from(message.serialize()),
                                                requestDeserialize: (bytes) => RunTransactionV1Request.deserialize(new Uint8Array(bytes)),
                                                responseSerialize: (message) => Buffer.from(message.serialize()),
                                                responseDeserialize: (bytes) => dependency_19.org.hyperledger.cacti.plugin.ledger.connector.besu.RunTransactionResponsePB.deserialize(new Uint8Array(bytes))
                                            },
                                            SignTransactionV1: {
                                                path: "/org.hyperledger.cacti.plugin.ledger.connector.besu.services.defaultservice.DefaultService/SignTransactionV1",
                                                requestStream: false,
                                                responseStream: false,
                                                requestSerialize: (message) => Buffer.from(message.serialize()),
                                                requestDeserialize: (bytes) => SignTransactionV1Request.deserialize(new Uint8Array(bytes)),
                                                responseSerialize: (message) => Buffer.from(message.serialize()),
                                                responseDeserialize: (bytes) => dependency_21.org.hyperledger.cacti.plugin.ledger.connector.besu.SignTransactionResponsePB.deserialize(new Uint8Array(bytes))
                                            }
                                        };
                                    }
                                    defaultservice.UnimplementedDefaultServiceService = UnimplementedDefaultServiceService;
                                    class DefaultServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedDefaultServiceService.definition, "DefaultService", {}) {
                                        constructor(address, credentials, options) {
                                            super(address, credentials, options);
                                        }
                                        DeployContractSolBytecodeNoKeychainV1 = (message, metadata, options, callback) => {
                                            return super.DeployContractSolBytecodeNoKeychainV1(message, metadata, options, callback);
                                        };
                                        DeployContractSolBytecodeV1 = (message, metadata, options, callback) => {
                                            return super.DeployContractSolBytecodeV1(message, metadata, options, callback);
                                        };
                                        GetBalanceV1 = (message, metadata, options, callback) => {
                                            return super.GetBalanceV1(message, metadata, options, callback);
                                        };
                                        GetBesuRecordV1 = (message, metadata, options, callback) => {
                                            return super.GetBesuRecordV1(message, metadata, options, callback);
                                        };
                                        GetBlockV1 = (message, metadata, options, callback) => {
                                            return super.GetBlockV1(message, metadata, options, callback);
                                        };
                                        GetOpenApiSpecV1 = (message, metadata, options, callback) => {
                                            return super.GetOpenApiSpecV1(message, metadata, options, callback);
                                        };
                                        GetPastLogsV1 = (message, metadata, options, callback) => {
                                            return super.GetPastLogsV1(message, metadata, options, callback);
                                        };
                                        GetPrometheusMetricsV1 = (message, metadata, options, callback) => {
                                            return super.GetPrometheusMetricsV1(message, metadata, options, callback);
                                        };
                                        GetTransactionV1 = (message, metadata, options, callback) => {
                                            return super.GetTransactionV1(message, metadata, options, callback);
                                        };
                                        InvokeContractV1 = (message, metadata, options, callback) => {
                                            return super.InvokeContractV1(message, metadata, options, callback);
                                        };
                                        RunTransactionV1 = (message, metadata, options, callback) => {
                                            return super.RunTransactionV1(message, metadata, options, callback);
                                        };
                                        SignTransactionV1 = (message, metadata, options, callback) => {
                                            return super.SignTransactionV1(message, metadata, options, callback);
                                        };
                                    }
                                    defaultservice.DefaultServiceClient = DefaultServiceClient;
                                })(defaultservice = services.defaultservice || (services.defaultservice = {}));
                            })(services = besu.services || (besu.services = {}));
                        })(besu = connector.besu || (connector.besu = {}));
                    })(connector = ledger.connector || (ledger.connector = {}));
                })(ledger = plugin.ledger || (plugin.ledger = {}));
            })(plugin = cacti.plugin || (cacti.plugin = {}));
        })(cacti = hyperledger.cacti || (hyperledger.cacti = {}));
    })(hyperledger = org.hyperledger || (org.hyperledger = {}));
})(org || (exports.org = org = {}));
//# sourceMappingURL=data:application/json;base64,