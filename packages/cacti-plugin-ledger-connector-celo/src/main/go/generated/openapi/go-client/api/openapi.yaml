openapi: 3.0.3
info:
  description: Can perform basic tasks on a Celo ledger
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Hyperledger Cacti Plugin - Connector Celo
  version: 2.0.0
servers:
- description: Local Development Server
  url: http://cacti.local:3000
paths:
  /api/v1/plugins/@hyperledger/cacti-plugin-ledger-connector-celo/get-open-api-spec:
    get:
      operationId: getOpenApiSpecV1
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "401":
          description: Unauthorized
      security: []
      summary: Retrieves the .json file that contains the OpenAPI specification for
        the plugin.
      x-hyperledger-cacti:
        http:
          verbLowerCase: get
          path: /api/v1/plugins/@hyperledger/cacti-plugin-ledger-connector-celo/get-open-api-spec
  /api/v1/plugins/@hyperledger/cacti-plugin-ledger-connector-celo/deploy-contract:
    post:
      operationId: deployContractV1
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployContractV1Request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployContractV1Response'
          description: OK
        "401":
          description: Unauthorized
      summary: Deploys the bytecode of a Solidity contract without the need of keychain
      x-hyperledger-cacti:
        http:
          verbLowerCase: post
          path: /api/v1/plugins/@hyperledger/cacti-plugin-ledger-connector-celo/deploy-contract
components:
  schemas:
    Web3SigningCredentialPrivateKeyHex:
      example:
        ethAccount: ethAccount
        secret: secret
      properties:
        ethAccount:
          description: The ethereum account (public key) that the credential belongs
            to. Basically the username in the traditional terminology of authentication.
          maxLength: 64
          minLength: 32
          nullable: false
          type: string
        secret:
          description: The HEX encoded private key of an eth account.
          maxLength: 65535
          minLength: 0
          type: string
      required:
      - ethAccount
      - secret
      - type
      type: object
    DeployContractV1Request:
      additionalProperties: false
      example:
        bytecode: bytecode
        chainId: 0.8008281904610115
        constructorArgs:
        - ""
        - ""
        timeoutMs: 0.14658129805029452
        contractAbi:
        - ""
        - ""
        gas: 6.027456183070403
        web3SigningCredential:
          ethAccount: ethAccount
          secret: secret
        contractName: contractName
        contractJSONString: contractJSONString
        gasPrice: gasPrice
      properties:
        chainId:
          description: The chainId to specify when executing the contract  deployment
            transaction on the Celo ledger.
          nullable: false
          type: number
        contractName:
          description: The contract name for retrieve the contracts json on the keychain.
          maxLength: 100
          minLength: 1
          nullable: false
          type: string
        contractAbi:
          description: The application binary interface of the solidity contract
          items: {}
          nullable: false
          type: array
        contractJSONString:
          description: "For use when not using keychain, pass the contract in as this\
            \ string variable"
          nullable: false
          type: string
        constructorArgs:
          default: []
          items: {}
          type: array
        web3SigningCredential:
          $ref: '#/components/schemas/Web3SigningCredentialPrivateKeyHex'
        bytecode:
          description: See https://ethereum.stackexchange.com/a/47556 regarding the
            maximum length of the bytecode
          maxLength: 24576
          minLength: 1
          nullable: false
          type: string
        gas:
          nullable: false
          type: number
        gasPrice:
          nullable: false
          type: string
        timeoutMs:
          default: 60000
          description: The amount of milliseconds to wait for a transaction receipt
            with theaddress of the contract(which indicates successful deployment)
            beforegiving up and crashing.
          minimum: 0
          nullable: false
          type: number
      required:
      - bytecode
      - chainId
      - constructorArgs
      - contractAbi
      - contractName
      - web3SigningCredential
      type: object
    DeployContractV1Response:
      example:
        txReceipt: "{}"
      properties:
        txReceipt:
          type: object
      required:
      - txReceipt
      type: object
    WatchBlocksV1:
      enum:
      - org.hyperledger.cactus.api.async.celo.WatchBlocksV1.Subscribe
      - org.hyperledger.cactus.api.async.celo.WatchBlocksV1.Next
      - org.hyperledger.cactus.api.async.celo.WatchBlocksV1.Unsubscribe
      - org.hyperledger.cactus.api.async.celo.WatchBlocksV1.Error
      - org.hyperledger.cactus.api.async.celo.WatchBlocksV1.Complete
      type: string
      x-enum-varnames:
      - Subscribe
      - Next
      - Unsubscribe
      - Error
      - Complete
    WatchBlocksV1Request:
      properties:
        event:
          $ref: '#/components/schemas/WatchBlocksV1'
      required:
      - event
      type: object
    WatchBlocksV1Progress:
      description: FIXME - the payload is not well defined
      properties:
        block:
          additionalProperties: true
          type: object
      required:
      - block
      type: object
