/*
Hyperledger Cacti Plugin - Connector Celo

Can perform basic tasks on a Celo ledger

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cacti-plugin-ledger-connector-celo

import (
	"encoding/json"
)

// checks if the DeployContractV1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeployContractV1Request{}

// DeployContractV1Request struct for DeployContractV1Request
type DeployContractV1Request struct {
	// The chainId to specify when executing the contract  deployment transaction on the Celo ledger.
	ChainId float32 `json:"chainId"`
	// The contract name for retrieve the contracts json on the keychain.
	ContractName string `json:"contractName"`
	// The application binary interface of the solidity contract
	ContractAbi []interface{} `json:"contractAbi"`
	// For use when not using keychain, pass the contract in as this string variable
	ContractJSONString *string `json:"contractJSONString,omitempty"`
	ConstructorArgs []interface{} `json:"constructorArgs"`
	Web3SigningCredential Web3SigningCredentialPrivateKeyHex `json:"web3SigningCredential"`
	// See https://ethereum.stackexchange.com/a/47556 regarding the maximum length of the bytecode
	Bytecode string `json:"bytecode"`
	Gas *float32 `json:"gas,omitempty"`
	GasPrice *string `json:"gasPrice,omitempty"`
	// The amount of milliseconds to wait for a transaction receipt with theaddress of the contract(which indicates successful deployment) beforegiving up and crashing.
	TimeoutMs *float32 `json:"timeoutMs,omitempty"`
}

// NewDeployContractV1Request instantiates a new DeployContractV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployContractV1Request(chainId float32, contractName string, contractAbi []interface{}, constructorArgs []interface{}, web3SigningCredential Web3SigningCredentialPrivateKeyHex, bytecode string) *DeployContractV1Request {
	this := DeployContractV1Request{}
	this.ChainId = chainId
	this.ContractName = contractName
	this.ContractAbi = contractAbi
	this.ConstructorArgs = constructorArgs
	this.Web3SigningCredential = web3SigningCredential
	this.Bytecode = bytecode
	var timeoutMs float32 = 60000
	this.TimeoutMs = &timeoutMs
	return &this
}

// NewDeployContractV1RequestWithDefaults instantiates a new DeployContractV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployContractV1RequestWithDefaults() *DeployContractV1Request {
	this := DeployContractV1Request{}
	var timeoutMs float32 = 60000
	this.TimeoutMs = &timeoutMs
	return &this
}

// GetChainId returns the ChainId field value
func (o *DeployContractV1Request) GetChainId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value
// and a boolean to check if the value has been set.
func (o *DeployContractV1Request) GetChainIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainId, true
}

// SetChainId sets field value
func (o *DeployContractV1Request) SetChainId(v float32) {
	o.ChainId = v
}

// GetContractName returns the ContractName field value
func (o *DeployContractV1Request) GetContractName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractName
}

// GetContractNameOk returns a tuple with the ContractName field value
// and a boolean to check if the value has been set.
func (o *DeployContractV1Request) GetContractNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractName, true
}

// SetContractName sets field value
func (o *DeployContractV1Request) SetContractName(v string) {
	o.ContractName = v
}

// GetContractAbi returns the ContractAbi field value
func (o *DeployContractV1Request) GetContractAbi() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}

	return o.ContractAbi
}

// GetContractAbiOk returns a tuple with the ContractAbi field value
// and a boolean to check if the value has been set.
func (o *DeployContractV1Request) GetContractAbiOk() ([]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContractAbi, true
}

// SetContractAbi sets field value
func (o *DeployContractV1Request) SetContractAbi(v []interface{}) {
	o.ContractAbi = v
}

// GetContractJSONString returns the ContractJSONString field value if set, zero value otherwise.
func (o *DeployContractV1Request) GetContractJSONString() string {
	if o == nil || IsNil(o.ContractJSONString) {
		var ret string
		return ret
	}
	return *o.ContractJSONString
}

// GetContractJSONStringOk returns a tuple with the ContractJSONString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployContractV1Request) GetContractJSONStringOk() (*string, bool) {
	if o == nil || IsNil(o.ContractJSONString) {
		return nil, false
	}
	return o.ContractJSONString, true
}

// HasContractJSONString returns a boolean if a field has been set.
func (o *DeployContractV1Request) HasContractJSONString() bool {
	if o != nil && !IsNil(o.ContractJSONString) {
		return true
	}

	return false
}

// SetContractJSONString gets a reference to the given string and assigns it to the ContractJSONString field.
func (o *DeployContractV1Request) SetContractJSONString(v string) {
	o.ContractJSONString = &v
}

// GetConstructorArgs returns the ConstructorArgs field value
func (o *DeployContractV1Request) GetConstructorArgs() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}

	return o.ConstructorArgs
}

// GetConstructorArgsOk returns a tuple with the ConstructorArgs field value
// and a boolean to check if the value has been set.
func (o *DeployContractV1Request) GetConstructorArgsOk() ([]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConstructorArgs, true
}

// SetConstructorArgs sets field value
func (o *DeployContractV1Request) SetConstructorArgs(v []interface{}) {
	o.ConstructorArgs = v
}

// GetWeb3SigningCredential returns the Web3SigningCredential field value
func (o *DeployContractV1Request) GetWeb3SigningCredential() Web3SigningCredentialPrivateKeyHex {
	if o == nil {
		var ret Web3SigningCredentialPrivateKeyHex
		return ret
	}

	return o.Web3SigningCredential
}

// GetWeb3SigningCredentialOk returns a tuple with the Web3SigningCredential field value
// and a boolean to check if the value has been set.
func (o *DeployContractV1Request) GetWeb3SigningCredentialOk() (*Web3SigningCredentialPrivateKeyHex, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Web3SigningCredential, true
}

// SetWeb3SigningCredential sets field value
func (o *DeployContractV1Request) SetWeb3SigningCredential(v Web3SigningCredentialPrivateKeyHex) {
	o.Web3SigningCredential = v
}

// GetBytecode returns the Bytecode field value
func (o *DeployContractV1Request) GetBytecode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bytecode
}

// GetBytecodeOk returns a tuple with the Bytecode field value
// and a boolean to check if the value has been set.
func (o *DeployContractV1Request) GetBytecodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bytecode, true
}

// SetBytecode sets field value
func (o *DeployContractV1Request) SetBytecode(v string) {
	o.Bytecode = v
}

// GetGas returns the Gas field value if set, zero value otherwise.
func (o *DeployContractV1Request) GetGas() float32 {
	if o == nil || IsNil(o.Gas) {
		var ret float32
		return ret
	}
	return *o.Gas
}

// GetGasOk returns a tuple with the Gas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployContractV1Request) GetGasOk() (*float32, bool) {
	if o == nil || IsNil(o.Gas) {
		return nil, false
	}
	return o.Gas, true
}

// HasGas returns a boolean if a field has been set.
func (o *DeployContractV1Request) HasGas() bool {
	if o != nil && !IsNil(o.Gas) {
		return true
	}

	return false
}

// SetGas gets a reference to the given float32 and assigns it to the Gas field.
func (o *DeployContractV1Request) SetGas(v float32) {
	o.Gas = &v
}

// GetGasPrice returns the GasPrice field value if set, zero value otherwise.
func (o *DeployContractV1Request) GetGasPrice() string {
	if o == nil || IsNil(o.GasPrice) {
		var ret string
		return ret
	}
	return *o.GasPrice
}

// GetGasPriceOk returns a tuple with the GasPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployContractV1Request) GetGasPriceOk() (*string, bool) {
	if o == nil || IsNil(o.GasPrice) {
		return nil, false
	}
	return o.GasPrice, true
}

// HasGasPrice returns a boolean if a field has been set.
func (o *DeployContractV1Request) HasGasPrice() bool {
	if o != nil && !IsNil(o.GasPrice) {
		return true
	}

	return false
}

// SetGasPrice gets a reference to the given string and assigns it to the GasPrice field.
func (o *DeployContractV1Request) SetGasPrice(v string) {
	o.GasPrice = &v
}

// GetTimeoutMs returns the TimeoutMs field value if set, zero value otherwise.
func (o *DeployContractV1Request) GetTimeoutMs() float32 {
	if o == nil || IsNil(o.TimeoutMs) {
		var ret float32
		return ret
	}
	return *o.TimeoutMs
}

// GetTimeoutMsOk returns a tuple with the TimeoutMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployContractV1Request) GetTimeoutMsOk() (*float32, bool) {
	if o == nil || IsNil(o.TimeoutMs) {
		return nil, false
	}
	return o.TimeoutMs, true
}

// HasTimeoutMs returns a boolean if a field has been set.
func (o *DeployContractV1Request) HasTimeoutMs() bool {
	if o != nil && !IsNil(o.TimeoutMs) {
		return true
	}

	return false
}

// SetTimeoutMs gets a reference to the given float32 and assigns it to the TimeoutMs field.
func (o *DeployContractV1Request) SetTimeoutMs(v float32) {
	o.TimeoutMs = &v
}

func (o DeployContractV1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeployContractV1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["chainId"] = o.ChainId
	toSerialize["contractName"] = o.ContractName
	toSerialize["contractAbi"] = o.ContractAbi
	if !IsNil(o.ContractJSONString) {
		toSerialize["contractJSONString"] = o.ContractJSONString
	}
	toSerialize["constructorArgs"] = o.ConstructorArgs
	toSerialize["web3SigningCredential"] = o.Web3SigningCredential
	toSerialize["bytecode"] = o.Bytecode
	if !IsNil(o.Gas) {
		toSerialize["gas"] = o.Gas
	}
	if !IsNil(o.GasPrice) {
		toSerialize["gasPrice"] = o.GasPrice
	}
	if !IsNil(o.TimeoutMs) {
		toSerialize["timeoutMs"] = o.TimeoutMs
	}
	return toSerialize, nil
}

type NullableDeployContractV1Request struct {
	value *DeployContractV1Request
	isSet bool
}

func (v NullableDeployContractV1Request) Get() *DeployContractV1Request {
	return v.value
}

func (v *NullableDeployContractV1Request) Set(val *DeployContractV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployContractV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployContractV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployContractV1Request(val *DeployContractV1Request) *NullableDeployContractV1Request {
	return &NullableDeployContractV1Request{value: val, isSet: true}
}

func (v NullableDeployContractV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployContractV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


