/*
Hyperledger Cactus Plugin - Connector Fabric

Can perform basic tasks on a fabric ledger

API version: 2.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-fabric

import (
	"encoding/json"
)

// checks if the SetSshConfigBase64RequestV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetSshConfigBase64RequestV1{}

// SetSshConfigBase64RequestV1 struct for SetSshConfigBase64RequestV1
type SetSshConfigBase64RequestV1 struct {
	// The Base64 encoded SSH configuration object to be used by the Cacti Fabric Connector for subsequent contract deployments.
	SshConfigB64 string `json:"sshConfigB64"`
}

// NewSetSshConfigBase64RequestV1 instantiates a new SetSshConfigBase64RequestV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetSshConfigBase64RequestV1(sshConfigB64 string) *SetSshConfigBase64RequestV1 {
	this := SetSshConfigBase64RequestV1{}
	this.SshConfigB64 = sshConfigB64
	return &this
}

// NewSetSshConfigBase64RequestV1WithDefaults instantiates a new SetSshConfigBase64RequestV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetSshConfigBase64RequestV1WithDefaults() *SetSshConfigBase64RequestV1 {
	this := SetSshConfigBase64RequestV1{}
	return &this
}

// GetSshConfigB64 returns the SshConfigB64 field value
func (o *SetSshConfigBase64RequestV1) GetSshConfigB64() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SshConfigB64
}

// GetSshConfigB64Ok returns a tuple with the SshConfigB64 field value
// and a boolean to check if the value has been set.
func (o *SetSshConfigBase64RequestV1) GetSshConfigB64Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SshConfigB64, true
}

// SetSshConfigB64 sets field value
func (o *SetSshConfigBase64RequestV1) SetSshConfigB64(v string) {
	o.SshConfigB64 = v
}

func (o SetSshConfigBase64RequestV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetSshConfigBase64RequestV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sshConfigB64"] = o.SshConfigB64
	return toSerialize, nil
}

type NullableSetSshConfigBase64RequestV1 struct {
	value *SetSshConfigBase64RequestV1
	isSet bool
}

func (v NullableSetSshConfigBase64RequestV1) Get() *SetSshConfigBase64RequestV1 {
	return v.value
}

func (v *NullableSetSshConfigBase64RequestV1) Set(val *SetSshConfigBase64RequestV1) {
	v.value = val
	v.isSet = true
}

func (v NullableSetSshConfigBase64RequestV1) IsSet() bool {
	return v.isSet
}

func (v *NullableSetSshConfigBase64RequestV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetSshConfigBase64RequestV1(val *SetSshConfigBase64RequestV1) *NullableSetSshConfigBase64RequestV1 {
	return &NullableSetSshConfigBase64RequestV1{value: val, isSet: true}
}

func (v NullableSetSshConfigBase64RequestV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetSshConfigBase64RequestV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


